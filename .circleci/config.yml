version: 2.0
defaults: &defaults
  docker:
    - image: nervesproject/nerves:0.13.5

install_elixir: &install_elixir
  run:
    name: Install Elixir
    command: |
      wget https://github.com/elixir-lang/elixir/releases/download/v1.5.1/Precompiled.zip
      unzip -d /usr/local/elixir Precompiled.zip
      echo 'export PATH=/usr/local/elixir/bin:$PATH' >> $BASH_ENV

jobs:
  test:
    <<: *defaults
    environment:
      MIX_ENV: test
    steps:
      - checkout
      - <<: *install_elixir
      - restore_cache:
          keys:
            - v3-dependency-cache-{{ checksum "mix.lock.host" }}
            - v3-dependency-cache
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix archive.install hex nerves_bootstrap --force
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix compile
      - save_cache:
          key: v3-dependency-cache-{{ checksum "mix.lock.host" }}
          paths:
            - _build
            - ~/.mix
            - ~/.nerves
      - run:
          command: mix coveralls.circle

  firmware:
    <<: *defaults
    environment:
      MIX_TARGET: rpi3
      ENV: CI
    steps:
      - checkout
      - <<: *install_elixir
      - restore_cache:
          keys:
            - v3-dependency-cache-{{ checksum "mix.lock.rpi3" }}
            - v3-dependency-cache
      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: mix archive.install hex nerves_bootstrap --force
      - run: mix deps.get
      - run: mix deps.compile
      - run: mix compile
      - run:
          command: mix firmware
      - save_cache:
          key: v3-dependency-cache-{{ checksum "mix.lock.rpi3" }}
          paths:
            - _build
            - ~/.mix
            - ~/.nerves
      - run: mix firmware.slack --channels C58DCU4A3
      - run:
          name: Make artifacts dir
          command: mkdir -p artifacts
      - run:
          name: Decode fwup priv key
          command: echo $FWUP_KEY_BASE64 | base64 --decode --ignore-garbage > $NERVES_FW_PRIV_KEY
      - run:
          name: Sign firmware
          command: fwup -S -s $NERVES_FW_PRIV_KEY -i _build/$MIX_TARGET/$MIX_ENV/nerves/images/farmbot.fw -o artifacts/farmbot-${MIX_TARGET}-$(cat VERSION)-beta.fw
      - save_cache:
          key: v3-firmware-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
          paths:
            - ./artifacts

  deploy_firmware:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.5.4/ghr_v0.5.4_linux_amd64.zip
            unzip ghr_v0.5.4_linux_amd64.zip
      - run:
          command: grep -Pazo "(?s)(?<=# $(cat VERSION))[^#]+" CHANGELOG.md > RELEASE_NOTES
      - restore_cache:
          key: v3-firmware-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
      - run:
          command: ./ghr -t $GITHUB_TOKEN -u farmbot -r farmbot_os -recreate -prerelease -b "$(cat RELEASE_NOTES)" -c beta "v$(cat VERSION)-beta" $PWD/artifacts

workflows:
  version: 2
  test_firmware_upload:
    jobs:
      - test:
          context: org-global
          filters:
            branches:
              ignore: beta
      - firmware:
          context: org-global
          filters:
            branches:
              ignore: beta

  deploy_beta:
    jobs:
      - firmware:
          context: org-global
          filters:
            branches:
              only:
                - beta
      - deploy_firmware:
          context: org-global
          filters:
            branches:
              only:
                - beta
          requires:
            - firmware

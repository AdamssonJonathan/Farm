# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    docker:
      - image: nervesproject/nerves:0.13.5
    environment:
      ENV: CI
      MIX_ENV: test
      ELIXIR_VERSION: 1.5.2

    install_elixir: &install_elixir
      run:
        name: Install Elixir
        command: |
          wget https://github.com/elixir-lang/elixir/releases/download/v$ELIXIR_VERSION/Precompiled.zip
          unzip -d /usr/local/elixir Precompiled.zip
          echo 'export PATH=/usr/local/elixir/bin:$PATH' >> $BASH_ENV

    install_hex_rebar: &install_hex_rebar
      run:
        name: Install hex and rebar
        command: |
          mix local.hex --force
          mix local.rebar --force

    install_nerves_bootstrap: &install_nerves_bootstrap
      run:
        name: Install nerves_bootstrap
        command: mix archive.install hex nerves_bootstrap --force
    working_directory: ~/farmbot_os
    steps:
      - checkout
      - <<: *install_elixir
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap
      - run: mix deps.get

  test:
    docker:
      - image: nervesproject/nerves:0.13.5
    working_directory: ~/farmbot_os
    environment:
      ENV: CI
      MIX_ENV: test
    steps:
      - run: mix credo --strict --ignore Credo.Check.Readability.MaxLineLength
      - run: mix coveralls.travis --seed 0 --exclude farmbot_firmware

  firmware:
    docker:
      - image: nervesproject/nerves:0.13.5
    working_directory: ~/farmbot_os
    environment:
      MIX_ENV: dev
      MIX_TARGET: rpi3
    steps:
      - run: mix deps.get
      - run: mix firmware

  slack:
    docker:
      - image: nervesproject/nerves:0.13.5
    working_directory: ~/farmbot_os
    environment:
      MIX_ENV: dev
      MIX_TARGET: rpi3
    steps:
      - run: echo "export COMMIT_MESSAGE=\"$(git log --format=oneline -n 1 $CIRCLE_SHA1)\"" >> ~/.bashrc
      - run: mix firmware.slack --channels C58DCU4A3 $COMMIT_MESSAGE

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - firmware:
          requires:
            - test
      - slack:
          requires:
            - firmware

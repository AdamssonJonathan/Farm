version: 2.0
defaults: &defaults
  working_directory: ~/farmbot_os
  docker:
    - image: nervesproject/nerves:0.13.5
  environment:
    ENV: CI
    MIX_ENV: test
    ELIXIR_VERSION: 1.5.2

install_elixir: &install_elixir
  run:
    name: Install Elixir
    command: |
      wget https://github.com/elixir-lang/elixir/releases/download/v$ELIXIR_VERSION/Precompiled.zip
      unzip -d /usr/local/elixir Precompiled.zip
      echo 'export PATH=/usr/local/elixir/bin:$PATH' >> $BASH_ENV
install_hex_rebar: &install_hex_rebar
  run:
    name: Install hex and rebar
    command: |
      mix local.hex --force
      mix local.rebar --force
install_nerves_bootstrap: &install_nerves_bootstrap
  run:
    name: Install nerves_bootstrap
    command: mix archive.install hex nerves_bootstrap --force

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - <<: *install_elixir
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap
      - run:
          name: Install test dependencies
          command: mix deps.get
      - run:
          name: Lint
          command: mix credo --strict --ignore Credo.Check.Readability.MaxLineLength
      - run:
          name: Test
          command: mix coveralls.travis --seed 0 --exclude farmbot_firmware

  firmware:
    <<: *defaults
    environment:
      MIX_ENV: dev
      MIX_TARGET: rpi3
    steps:
      - checkout
      - <<: *install_elixir
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap
      - run:
          name: Install dev dependencies
          command: mix deps.get
      - run:
          name: Build dev firmware
          command: mix firmware
      - run:
          name: Upload dev firmware to slack
          command: mix firmware.slack --channels C58DCU4A3 $COMMIT_MESSAGE

workflows:
  version: 2
  test_firmware_upload:
    jobs:
      - test:
          context: org-global
      - firmware:
          context: org-global
          requires:
            - test
